// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  image     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
  products  Product[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  image       String
  price       Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  categoryId  Int
  stock       Int
  category    Category    @relation(fields: [categoryId], references: [id])
  OrderItem   OrderItem[]
  Review      Review[]

  @@fulltext([name, description])
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  phone     String
  address   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  Order     Order[]
  Review    Review[]
}

model Order {
  id          Int         @id @default(autoincrement())
  customerId  Int
  totalAmount Float
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  customer    Customer    @relation(fields: [customerId], references: [id])
  orderItems  OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Review {
  id         Int      @id @default(autoincrement())
  productId  Int
  customerId Int
  rating     Int
  comment    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  product    Product  @relation(fields: [productId], references: [id])
  customer   Customer @relation(fields: [customerId], references: [id])
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}
